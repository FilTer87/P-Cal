services:
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: privatecal-db
    environment:
      POSTGRES_DB: calendar_db
      POSTGRES_USER: calendar_user
      POSTGRES_PASSWORD: calendar_pass
      ENABLE_MIGRATIONS: "true"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations:ro
    ports:
      - "5432:5432"
    networks:
      - privatecal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U calendar_user -d calendar_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: privatecal-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - NTFY_SERVER_URL=${NTFY_SERVER_URL}
      - NTFY_TOPIC_PREFIX=${NTFY_TOPIC_PREFIX}
      - NTFY_AUTH_TOKEN=${NTFY_AUTH_TOKEN}
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - privatecal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: privatecal-frontend
    ports:
      - "80:8080"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - privatecal-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  privatecal-network:
    driver: bridge