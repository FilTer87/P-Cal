server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: PrivateCal Backend
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/calendar_db}
    username: ${DATABASE_USERNAME:calendar_user}
    password: ${DATABASE_PASSWORD:calendar_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
    open-in-view: false
  
  jackson:
    time-zone: UTC
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      adjust-dates-to-context-time-zone: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.privatecal: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Custom application properties
app:
  jwt:
    secret: ${JWT_SECRET:privatecal-jwt-secret-key-2024-very-secure}
    access-token-expiration: 60000    # 1 minute (test)
    # access-token-expiration: 900000    # 15 minutes
    refresh-token-expiration: 240000 # 4 minutes (test)
    # refresh-token-expiration: 604800000 # 7 days
  
  ntfy:
    server-url: ${NTFY_SERVER_URL:https://ntfy.sh}
    topic-prefix: "calendar-user-"
    enabled: true
  
  cors:
    allowed-origins: "http://localhost,http://localhost:3000,http://localhost:5173,http://frontend"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://database:5432/calendar_db

---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect